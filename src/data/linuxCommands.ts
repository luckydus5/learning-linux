export interface Command {
  name: string;
  category: string;
  description: string;
  syntax: string;
  options: { flag: string; description: string }[];
  examples: { command: string; description: string }[];
  relatedCommands: string[];
  difficulty: "beginner" | "intermediate" | "advanced";
  practiceExercises: string[];
}

export interface Category {
  id: string;
  name: string;
  description: string;
  icon: string;
  weeks: string;
}

export const categories: Category[] = [
  {
    id: "foundation",
    name: "Linux Foundation",
    description: "Basic navigation and system information",
    icon: "üèóÔ∏è",
    weeks: "1-3",
  },
  {
    id: "file-operations",
    name: "File Operations",
    description: "File and directory manipulation",
    icon: "üìÅ",
    weeks: "3-6",
  },
  {
    id: "text-processing",
    name: "Text Processing",
    description: "Search, filter, and manipulate text",
    icon: "üìù",
    weeks: "3-6",
  },
  {
    id: "permissions",
    name: "Permissions & Ownership",
    description: "File permissions and access control",
    icon: "üîê",
    weeks: "6-8",
  },
  {
    id: "process-management",
    name: "Process Management",
    description: "Monitor and control system processes",
    icon: "‚öôÔ∏è",
    weeks: "8-10",
  },
  {
    id: "user-management",
    name: "User Management",
    description: "User and group administration",
    icon: "üë•",
    weeks: "10-12",
  },
  {
    id: "package-management",
    name: "Package Management",
    description: "Software installation and updates",
    icon: "üì¶",
    weeks: "12-13",
  },
  {
    id: "networking",
    name: "Networking",
    description: "Network configuration and troubleshooting",
    icon: "üåê",
    weeks: "13-15",
  },
  {
    id: "system-services",
    name: "System Services",
    description: "Service management with systemd",
    icon: "üîß",
    weeks: "15-16",
  },
  {
    id: "scripting",
    name: "Shell Scripting",
    description: "Automation with bash scripts",
    icon: "üìú",
    weeks: "16-19",
  },
];

export const commands: Command[] = [
  // Foundation Commands (Weeks 1-3)
  {
    name: "pwd",
    category: "foundation",
    description: "Print the current working directory path",
    syntax: "pwd [OPTIONS]",
    options: [
      { flag: "-L", description: "Display logical path (default)" },
      { flag: "-P", description: "Display physical path, resolving symlinks" },
    ],
    examples: [
      { command: "pwd", description: "Show current directory" },
      { command: "pwd -P", description: "Show physical path resolving symlinks" },
    ],
    relatedCommands: ["cd", "ls", "realpath"],
    difficulty: "beginner",
    practiceExercises: [
      "Navigate to /var/log and print the working directory",
      "Create a symlink to a directory and compare pwd vs pwd -P",
      "Use pwd in a script to log the current location",
      "Navigate through 5 different directories and track your path",
    ],
  },
  {
    name: "ls",
    category: "foundation",
    description: "List directory contents with detailed information",
    syntax: "ls [OPTIONS] [FILE/DIR]",
    options: [
      { flag: "-l", description: "Long format with permissions, size, date" },
      { flag: "-a", description: "Show hidden files (starting with .)" },
      { flag: "-h", description: "Human-readable file sizes" },
      { flag: "-R", description: "Recursive listing" },
      { flag: "-t", description: "Sort by modification time" },
      { flag: "-S", description: "Sort by file size" },
      { flag: "-r", description: "Reverse sort order" },
      { flag: "-i", description: "Show inode numbers" },
    ],
    examples: [
      { command: "ls -la", description: "List all files with details" },
      { command: "ls -lh /var", description: "List /var with human-readable sizes" },
      { command: "ls -lt", description: "List files sorted by time" },
      { command: "ls -R ~/Documents", description: "Recursive listing of Documents" },
    ],
    relatedCommands: ["dir", "tree", "find", "stat"],
    difficulty: "beginner",
    practiceExercises: [
      "List all hidden files in your home directory",
      "Find the 5 largest files in /etc using ls -lS",
      "Create a directory structure and use ls -R to verify it",
      "List files modified in the last 24 hours using ls -lt",
      "Compare ls output with and without -h flag for /usr/bin",
    ],
  },
  {
    name: "cd",
    category: "foundation",
    description: "Change the current directory",
    syntax: "cd [DIRECTORY]",
    options: [],
    examples: [
      { command: "cd /var/log", description: "Go to /var/log directory" },
      { command: "cd ~", description: "Go to home directory" },
      { command: "cd -", description: "Go to previous directory" },
      { command: "cd ..", description: "Go up one directory level" },
      { command: "cd ../..", description: "Go up two directory levels" },
    ],
    relatedCommands: ["pwd", "pushd", "popd", "dirs"],
    difficulty: "beginner",
    practiceExercises: [
      "Navigate to /usr/share/doc and then return to home",
      "Use cd - to toggle between two directories 5 times",
      "Navigate using relative paths from /etc to /var/log",
      "Create a deep directory structure and navigate through it",
      "Practice using tab completion with cd command",
    ],
  },
  {
    name: "man",
    category: "foundation",
    description: "Display manual pages for commands",
    syntax: "man [SECTION] COMMAND",
    options: [
      { flag: "-k", description: "Search man pages by keyword" },
      { flag: "-f", description: "Show short description (whatis)" },
      { flag: "-a", description: "Display all matching manual pages" },
    ],
    examples: [
      { command: "man ls", description: "Show manual for ls command" },
      { command: "man -k network", description: "Search for network-related commands" },
      { command: "man 5 passwd", description: "Show passwd file format (section 5)" },
      { command: "man -f grep", description: "Show brief description of grep" },
    ],
    relatedCommands: ["info", "help", "whatis", "apropos"],
    difficulty: "beginner",
    practiceExercises: [
      "Find all commands related to 'process' using man -k",
      "Read the man page for chmod and find how to set SUID bit",
      "Explore different man sections (1-8) and understand their purpose",
      "Use man to find 5 ways to compress files",
      "Create a cheat sheet from man pages for 10 common commands",
    ],
  },
  {
    name: "mkdir",
    category: "file-operations",
    description: "Create directories",
    syntax: "mkdir [OPTIONS] DIRECTORY",
    options: [
      { flag: "-p", description: "Create parent directories as needed" },
      { flag: "-m", description: "Set permissions mode" },
      { flag: "-v", description: "Verbose - print created directories" },
    ],
    examples: [
      { command: "mkdir mydir", description: "Create a single directory" },
      { command: "mkdir -p path/to/deep/dir", description: "Create nested directories" },
      { command: "mkdir -m 755 public", description: "Create with specific permissions" },
      { command: "mkdir dir1 dir2 dir3", description: "Create multiple directories" },
    ],
    relatedCommands: ["rmdir", "rm", "touch", "install"],
    difficulty: "beginner",
    practiceExercises: [
      "Create a project structure: project/src, project/docs, project/tests",
      "Create directories with different permissions and verify with ls -l",
      "Use mkdir -p to create a 5-level deep directory structure",
      "Create 10 directories with a single command",
      "Create a directory tree for a web project with assets, css, js folders",
    ],
  },
  {
    name: "cp",
    category: "file-operations",
    description: "Copy files and directories",
    syntax: "cp [OPTIONS] SOURCE DEST",
    options: [
      { flag: "-r", description: "Copy directories recursively" },
      { flag: "-i", description: "Interactive - prompt before overwrite" },
      { flag: "-p", description: "Preserve attributes (permissions, timestamps)" },
      { flag: "-v", description: "Verbose - show files being copied" },
      { flag: "-u", description: "Update - copy only newer files" },
      { flag: "-a", description: "Archive mode (same as -rpd)" },
    ],
    examples: [
      { command: "cp file1.txt file2.txt", description: "Copy a file" },
      { command: "cp -r dir1/ dir2/", description: "Copy directory recursively" },
      { command: "cp -i *.txt backup/", description: "Copy with confirmation" },
      { command: "cp -a /source/* /dest/", description: "Archive copy preserving all" },
    ],
    relatedCommands: ["mv", "rsync", "dd", "install"],
    difficulty: "beginner",
    practiceExercises: [
      "Copy all .conf files from /etc to a backup directory",
      "Use cp -u to update only changed files in a backup",
      "Copy a directory structure while preserving all permissions",
      "Create a script that backs up files with timestamps",
      "Practice using cp with wildcards to copy specific file types",
    ],
  },
  {
    name: "mv",
    category: "file-operations",
    description: "Move or rename files and directories",
    syntax: "mv [OPTIONS] SOURCE DEST",
    options: [
      { flag: "-i", description: "Interactive - prompt before overwrite" },
      { flag: "-f", description: "Force - don't prompt" },
      { flag: "-n", description: "No clobber - don't overwrite" },
      { flag: "-v", description: "Verbose - show files being moved" },
      { flag: "-u", description: "Update - move only newer files" },
    ],
    examples: [
      { command: "mv oldname.txt newname.txt", description: "Rename a file" },
      { command: "mv file.txt /path/to/dir/", description: "Move file to directory" },
      { command: "mv -i *.log /var/log/old/", description: "Move with confirmation" },
      { command: "mv dir1 dir2", description: "Rename directory" },
    ],
    relatedCommands: ["cp", "rename", "mmv"],
    difficulty: "beginner",
    practiceExercises: [
      "Rename multiple files to add a date prefix",
      "Move all files older than 30 days to an archive folder",
      "Practice safe moving with -i flag to avoid overwrites",
      "Organize files by extension into different directories",
      "Create a script to rename files based on their content",
    ],
  },
  {
    name: "rm",
    category: "file-operations",
    description: "Remove files and directories",
    syntax: "rm [OPTIONS] FILE",
    options: [
      { flag: "-r", description: "Remove directories recursively" },
      { flag: "-f", description: "Force removal without prompting" },
      { flag: "-i", description: "Interactive - prompt before removal" },
      { flag: "-v", description: "Verbose - show files being removed" },
      { flag: "-d", description: "Remove empty directories" },
    ],
    examples: [
      { command: "rm file.txt", description: "Remove a single file" },
      { command: "rm -rf directory/", description: "Force remove directory (CAREFUL!)" },
      { command: "rm -i *.tmp", description: "Remove with confirmation" },
      { command: "rm -v old*.log", description: "Remove showing each file" },
    ],
    relatedCommands: ["rmdir", "unlink", "shred", "trash"],
    difficulty: "beginner",
    practiceExercises: [
      "Safely remove temporary files using -i flag",
      "Clean up empty directories in a project structure",
      "Create a safe rm alias that moves files to trash instead",
      "Remove all .bak files from a directory tree",
      "Practice using rm with find to remove specific files",
    ],
  },
  {
    name: "touch",
    category: "file-operations",
    description: "Create empty files or update timestamps",
    syntax: "touch [OPTIONS] FILE",
    options: [
      { flag: "-a", description: "Change only access time" },
      { flag: "-m", description: "Change only modification time" },
      { flag: "-t", description: "Use specific time [[CC]YY]MMDDhhmm[.ss]" },
      { flag: "-c", description: "Don't create file if it doesn't exist" },
    ],
    examples: [
      { command: "touch newfile.txt", description: "Create empty file" },
      { command: "touch file1 file2 file3", description: "Create multiple files" },
      { command: "touch -t 202301011200 file.txt", description: "Set specific time" },
      { command: "touch -c existing.txt", description: "Update timestamp only" },
    ],
    relatedCommands: ["stat", "date", "mkdir"],
    difficulty: "beginner",
    practiceExercises: [
      "Create 10 empty log files with today's date in the name",
      "Update timestamps of all files in a directory",
      "Create a file structure for a new project using touch",
      "Practice changing access and modification times separately",
      "Use touch with find to update old file timestamps",
    ],
  },
  {
    name: "cat",
    category: "text-processing",
    description: "Concatenate and display files",
    syntax: "cat [OPTIONS] [FILE]",
    options: [
      { flag: "-n", description: "Number all output lines" },
      { flag: "-b", description: "Number non-blank lines" },
      { flag: "-s", description: "Squeeze multiple blank lines" },
      { flag: "-E", description: "Display $ at end of each line" },
      { flag: "-T", description: "Display tabs as ^I" },
    ],
    examples: [
      { command: "cat file.txt", description: "Display file contents" },
      { command: "cat -n script.sh", description: "Show with line numbers" },
      { command: "cat file1 file2 > combined.txt", description: "Concatenate files" },
      { command: "cat << EOF > file.txt", description: "Create file with heredoc" },
    ],
    relatedCommands: ["less", "more", "head", "tail", "tac"],
    difficulty: "beginner",
    practiceExercises: [
      "Combine multiple log files into one master log",
      "Display a script with line numbers for debugging",
      "Create a file using cat and heredoc syntax",
      "Use cat to quickly view configuration files",
      "Practice using cat with pipes to process text",
    ],
  },
  {
    name: "grep",
    category: "text-processing",
    description: "Search text patterns in files",
    syntax: "grep [OPTIONS] PATTERN [FILE]",
    options: [
      { flag: "-i", description: "Case insensitive search" },
      { flag: "-r", description: "Recursive search in directories" },
      { flag: "-n", description: "Show line numbers" },
      { flag: "-c", description: "Count matching lines" },
      { flag: "-v", description: "Invert match (non-matching lines)" },
      { flag: "-E", description: "Extended regex (egrep)" },
      { flag: "-w", description: "Match whole words only" },
      { flag: "-l", description: "List only filenames with matches" },
    ],
    examples: [
      { command: "grep 'error' /var/log/syslog", description: "Find errors in log" },
      { command: "grep -r 'TODO' .", description: "Find TODO in all files" },
      { command: "grep -i 'warning' *.log", description: "Case insensitive search" },
      { command: "ps aux | grep python", description: "Find Python processes" },
    ],
    relatedCommands: ["egrep", "fgrep", "ack", "ag", "ripgrep"],
    difficulty: "intermediate",
    practiceExercises: [
      "Search for all email addresses in a text file using regex",
      "Find all files containing a specific function name",
      "Count occurrences of errors in multiple log files",
      "Create a script to monitor logs for specific patterns",
      "Use grep with find to search in specific file types",
    ],
  },
  {
    name: "sed",
    category: "text-processing",
    description: "Stream editor for text manipulation",
    syntax: "sed [OPTIONS] 'COMMAND' [FILE]",
    options: [
      { flag: "-i", description: "Edit files in-place" },
      { flag: "-e", description: "Add script command" },
      { flag: "-n", description: "Suppress automatic printing" },
      { flag: "-r", description: "Extended regex" },
    ],
    examples: [
      { command: "sed 's/old/new/g' file.txt", description: "Replace all occurrences" },
      { command: "sed -i 's/foo/bar/g' *.txt", description: "Replace in-place" },
      { command: "sed -n '10,20p' file.txt", description: "Print lines 10-20" },
      { command: "sed '/^#/d' config.conf", description: "Remove comment lines" },
    ],
    relatedCommands: ["awk", "tr", "cut", "perl"],
    difficulty: "intermediate",
    practiceExercises: [
      "Replace all IP addresses in a config file",
      "Remove blank lines from a text file",
      "Add line numbers to a file using sed",
      "Convert a CSV file to a different delimiter",
      "Create a sed script to clean up log files",
    ],
  },
  {
    name: "awk",
    category: "text-processing",
    description: "Pattern scanning and processing language",
    syntax: "awk 'PATTERN { ACTION }' [FILE]",
    options: [
      { flag: "-F", description: "Field separator" },
      { flag: "-v", description: "Set variable" },
      { flag: "-f", description: "Read program from file" },
    ],
    examples: [
      { command: "awk '{print $1}' file.txt", description: "Print first column" },
      { command: "awk -F: '{print $1,$3}' /etc/passwd", description: "Print username and UID" },
      { command: "awk 'NR>1 {sum+=$2} END {print sum}'", description: "Sum second column" },
      { command: "df | awk '$4 < 1000000 {print $6}'", description: "Find low disk space" },
    ],
    relatedCommands: ["sed", "cut", "perl", "python"],
    difficulty: "intermediate",
    practiceExercises: [
      "Calculate average of numbers in a column",
      "Extract and format data from /etc/passwd",
      "Process CSV files and generate reports",
      "Analyze log files to find patterns and statistics",
      "Create an awk script to monitor system resources",
    ],
  },
  {
    name: "find",
    category: "file-operations",
    description: "Search for files and directories",
    syntax: "find [PATH] [OPTIONS] [EXPRESSION]",
    options: [
      { flag: "-name", description: "Search by filename pattern" },
      { flag: "-type", description: "Search by type (f=file, d=directory)" },
      { flag: "-size", description: "Search by size" },
      { flag: "-mtime", description: "Modified time in days" },
      { flag: "-exec", description: "Execute command on results" },
      { flag: "-user", description: "Search by owner" },
      { flag: "-perm", description: "Search by permissions" },
    ],
    examples: [
      { command: "find . -name '*.log'", description: "Find all log files" },
      { command: "find /home -type d -empty", description: "Find empty directories" },
      { command: "find . -mtime -7", description: "Files modified in last 7 days" },
      { command: "find . -size +100M", description: "Find files larger than 100MB" },
      { command: "find . -name '*.tmp' -exec rm {} \\;", description: "Find and delete tmp files" },
    ],
    relatedCommands: ["locate", "which", "whereis", "fd"],
    difficulty: "intermediate",
    practiceExercises: [
      "Find all files modified in the last 24 hours",
      "Locate all SUID files on the system",
      "Find and archive files older than 30 days",
      "Search for duplicate files by size",
      "Create a cleanup script using find to remove old logs",
    ],
  },
  {
    name: "chmod",
    category: "permissions",
    description: "Change file permissions",
    syntax: "chmod [OPTIONS] MODE FILE",
    options: [
      { flag: "-R", description: "Change recursively" },
      { flag: "-v", description: "Verbose output" },
      { flag: "-c", description: "Report only changes" },
    ],
    examples: [
      { command: "chmod 755 script.sh", description: "rwxr-xr-x permissions" },
      { command: "chmod u+x file.sh", description: "Add execute for user" },
      { command: "chmod -R 644 *.txt", description: "Recursive permission change" },
      { command: "chmod g-w,o-rwx file", description: "Remove group write, all other" },
    ],
    relatedCommands: ["chown", "chgrp", "umask", "getfacl"],
    difficulty: "intermediate",
    practiceExercises: [
      "Set up proper permissions for a web directory",
      "Create a script and make it executable",
      "Fix permissions on a shared project folder",
      "Set up SUID bit on a custom program",
      "Practice using both numeric and symbolic modes",
    ],
  },
  {
    name: "chown",
    category: "permissions",
    description: "Change file ownership",
    syntax: "chown [OPTIONS] USER[:GROUP] FILE",
    options: [
      { flag: "-R", description: "Change recursively" },
      { flag: "-v", description: "Verbose output" },
      { flag: "-h", description: "Change symlink ownership" },
    ],
    examples: [
      { command: "chown user file.txt", description: "Change owner" },
      { command: "chown user:group file.txt", description: "Change owner and group" },
      { command: "chown -R www-data:www-data /var/www", description: "Recursive web ownership" },
      { command: "chown :staff document.pdf", description: "Change group only" },
    ],
    relatedCommands: ["chmod", "chgrp", "id", "groups"],
    difficulty: "intermediate",
    practiceExercises: [
      "Change ownership of web files to web server user",
      "Set up proper ownership for a shared directory",
      "Transfer ownership of user files to another user",
      "Fix ownership issues after copying files",
      "Create a script to audit file ownership",
    ],
  },
  {
    name: "ps",
    category: "process-management",
    description: "Display information about running processes",
    syntax: "ps [OPTIONS]",
    options: [
      { flag: "aux", description: "All processes with detailed info" },
      { flag: "ef", description: "Full format listing" },
      { flag: "-u", description: "Processes for specific user" },
      { flag: "-p", description: "Select by PID" },
      { flag: "--forest", description: "Show process tree" },
    ],
    examples: [
      { command: "ps aux", description: "Show all processes" },
      { command: "ps aux | grep nginx", description: "Find nginx processes" },
      { command: "ps -ef --forest", description: "Process tree view" },
      { command: "ps -u username", description: "Processes by user" },
    ],
    relatedCommands: ["top", "htop", "pgrep", "pidof", "pstree"],
    difficulty: "intermediate",
    practiceExercises: [
      "Find all processes consuming more than 10% CPU",
      "Identify zombie processes on the system",
      "Monitor processes for a specific user",
      "Create a script to alert on high memory usage",
      "Track parent-child process relationships",
    ],
  },
  {
    name: "top",
    category: "process-management",
    description: "Display dynamic real-time process information",
    syntax: "top [OPTIONS]",
    options: [
      { flag: "-u", description: "Show specific user's processes" },
      { flag: "-p", description: "Monitor specific PIDs" },
      { flag: "-n", description: "Number of iterations" },
      { flag: "-b", description: "Batch mode for scripts" },
    ],
    examples: [
      { command: "top", description: "Interactive process monitor" },
      { command: "top -u username", description: "Monitor user's processes" },
      { command: "top -n 1 -b > snapshot.txt", description: "Single snapshot to file" },
      { command: "top -p 1234,5678", description: "Monitor specific PIDs" },
    ],
    relatedCommands: ["htop", "ps", "vmstat", "iostat"],
    difficulty: "intermediate",
    practiceExercises: [
      "Monitor system load and identify bottlenecks",
      "Use top to find memory leaks",
      "Sort processes by different criteria (CPU, MEM, TIME)",
      "Create performance reports using batch mode",
      "Practice using interactive commands in top",
    ],
  },
  {
    name: "kill",
    category: "process-management",
    description: "Terminate processes by PID",
    syntax: "kill [OPTIONS] PID",
    options: [
      { flag: "-9", description: "Force kill (SIGKILL)" },
      { flag: "-15", description: "Graceful termination (SIGTERM, default)" },
      { flag: "-l", description: "List all signal names" },
      { flag: "-s", description: "Specify signal to send" },
    ],
    examples: [
      { command: "kill 1234", description: "Send SIGTERM to process" },
      { command: "kill -9 5678", description: "Force kill process" },
      { command: "kill -STOP 9012", description: "Suspend process" },
      { command: "killall firefox", description: "Kill all Firefox processes" },
    ],
    relatedCommands: ["killall", "pkill", "xkill", "skill"],
    difficulty: "intermediate",
    practiceExercises: [
      "Practice graceful vs forced termination",
      "Use kill to manage runaway processes",
      "Send different signals and observe behavior",
      "Create a script to kill processes by name",
      "Learn when to use different signal types",
    ],
  },
  {
    name: "systemctl",
    category: "system-services",
    description: "Control systemd services and system state",
    syntax: "systemctl [OPTIONS] COMMAND [SERVICE]",
    options: [
      { flag: "status", description: "Show service status" },
      { flag: "start", description: "Start a service" },
      { flag: "stop", description: "Stop a service" },
      { flag: "restart", description: "Restart a service" },
      { flag: "enable", description: "Enable service at boot" },
      { flag: "disable", description: "Disable service at boot" },
    ],
    examples: [
      { command: "systemctl status nginx", description: "Check nginx status" },
      { command: "systemctl restart apache2", description: "Restart Apache" },
      { command: "systemctl enable ssh", description: "Enable SSH at boot" },
      { command: "systemctl list-units --failed", description: "Show failed services" },
    ],
    relatedCommands: ["service", "journalctl", "systemd-analyze"],
    difficulty: "intermediate",
    practiceExercises: [
      "Manage web server services",
      "Configure services to start at boot",
      "Troubleshoot failed services",
      "Create and manage custom service units",
      "Monitor service dependencies",
    ],
  },
  {
    name: "journalctl",
    category: "system-services",
    description: "Query and display systemd journal logs",
    syntax: "journalctl [OPTIONS]",
    options: [
      { flag: "-u", description: "Show logs for specific unit" },
      { flag: "-f", description: "Follow log output" },
      { flag: "-n", description: "Number of lines to show" },
      { flag: "--since", description: "Show logs since time" },
      { flag: "-p", description: "Filter by priority" },
    ],
    examples: [
      { command: "journalctl -u nginx", description: "Show nginx logs" },
      { command: "journalctl -f", description: "Follow system logs" },
      { command: "journalctl --since 'yesterday'", description: "Logs since yesterday" },
      { command: "journalctl -p err", description: "Show only errors" },
    ],
    relatedCommands: ["dmesg", "tail", "logger", "systemctl"],
    difficulty: "intermediate",
    practiceExercises: [
      "Investigate boot issues using journal",
      "Monitor specific service logs",
      "Filter logs by time range and severity",
      "Export logs for analysis",
      "Set up log rotation policies",
    ],
  },
  {
    name: "useradd",
    category: "user-management",
    description: "Create new user accounts",
    syntax: "useradd [OPTIONS] USERNAME",
    options: [
      { flag: "-m", description: "Create home directory" },
      { flag: "-s", description: "Specify shell" },
      { flag: "-g", description: "Primary group" },
      { flag: "-G", description: "Supplementary groups" },
      { flag: "-d", description: "Home directory path" },
    ],
    examples: [
      { command: "useradd -m john", description: "Create user with home" },
      { command: "useradd -m -s /bin/bash -G sudo alice", description: "User with bash and sudo" },
      { command: "useradd -r -s /bin/false appuser", description: "System user" },
      { command: "useradd -e 2024-12-31 temp", description: "User with expiry date" },
    ],
    relatedCommands: ["usermod", "userdel", "passwd", "adduser"],
    difficulty: "intermediate",
    practiceExercises: [
      "Create users with different shells",
      "Set up users with specific group memberships",
      "Create system accounts for services",
      "Implement user account templates",
      "Script bulk user creation",
    ],
  },
  {
    name: "passwd",
    category: "user-management",
    description: "Change user passwords",
    syntax: "passwd [OPTIONS] [USERNAME]",
    options: [
      { flag: "-l", description: "Lock account" },
      { flag: "-u", description: "Unlock account" },
      { flag: "-d", description: "Delete password" },
      { flag: "-e", description: "Force password change" },
      { flag: "-S", description: "Show password status" },
    ],
    examples: [
      { command: "passwd", description: "Change current user password" },
      { command: "passwd alice", description: "Change another user's password" },
      { command: "passwd -l bob", description: "Lock bob's account" },
      { command: "passwd -e charlie", description: "Force password change on login" },
    ],
    relatedCommands: ["chage", "usermod", "shadow", "pam"],
    difficulty: "intermediate",
    practiceExercises: [
      "Set up password policies",
      "Implement password expiration",
      "Lock and unlock user accounts",
      "Force password changes for users",
      "Audit password status for all users",
    ],
  },
  {
    name: "sudo",
    category: "user-management",
    description: "Execute commands as another user (typically root)",
    syntax: "sudo [OPTIONS] COMMAND",
    options: [
      { flag: "-u", description: "Run as specific user" },
      { flag: "-i", description: "Login shell as target user" },
      { flag: "-s", description: "Run shell as target user" },
      { flag: "-l", description: "List user's privileges" },
      { flag: "-k", description: "Reset timestamp" },
    ],
    examples: [
      { command: "sudo apt update", description: "Update packages as root" },
      { command: "sudo -u www-data php script.php", description: "Run as www-data" },
      { command: "sudo -i", description: "Root shell" },
      { command: "sudo visudo", description: "Edit sudoers file" },
    ],
    relatedCommands: ["su", "visudo", "sudoedit", "groups"],
    difficulty: "intermediate",
    practiceExercises: [
      "Configure sudoers file for specific commands",
      "Set up passwordless sudo for automation",
      "Create sudo rules for groups",
      "Audit sudo usage with logs",
      "Implement sudo timeout policies",
    ],
  },
  {
    name: "apt",
    category: "package-management",
    description: "Advanced Package Tool for Debian/Ubuntu",
    syntax: "apt [OPTIONS] COMMAND",
    options: [
      { flag: "update", description: "Update package lists" },
      { flag: "upgrade", description: "Upgrade installed packages" },
      { flag: "install", description: "Install new packages" },
      { flag: "remove", description: "Remove packages" },
      { flag: "search", description: "Search for packages" },
      { flag: "show", description: "Show package details" },
    ],
    examples: [
      { command: "apt update && apt upgrade", description: "Update system" },
      { command: "apt install nginx", description: "Install nginx" },
      { command: "apt search python3", description: "Search Python packages" },
      { command: "apt autoremove", description: "Remove unused packages" },
    ],
    relatedCommands: ["apt-get", "dpkg", "aptitude", "snap"],
    difficulty: "intermediate",
    practiceExercises: [
      "Update system and install security patches",
      "Search and install development tools",
      "Remove packages and clean cache",
      "Pin package versions",
      "Set up automatic updates",
    ],
  },
  {
    name: "ip",
    category: "networking",
    description: "Show and manipulate network interfaces",
    syntax: "ip [OPTIONS] OBJECT COMMAND",
    options: [
      { flag: "addr", description: "IP addresses" },
      { flag: "link", description: "Network interfaces" },
      { flag: "route", description: "Routing table" },
      { flag: "neigh", description: "ARP cache" },
    ],
    examples: [
      { command: "ip addr show", description: "Show all IP addresses" },
      { command: "ip link set eth0 up", description: "Bring interface up" },
      { command: "ip route show", description: "Display routing table" },
      { command: "ip addr add 192.168.1.10/24 dev eth0", description: "Add IP address" },
    ],
    relatedCommands: ["ifconfig", "route", "netstat", "ss"],
    difficulty: "intermediate",
    practiceExercises: [
      "Configure network interfaces",
      "Add and remove IP addresses",
      "Set up static routes",
      "Troubleshoot network connectivity",
      "Monitor network interface statistics",
    ],
  },
  {
    name: "ping",
    category: "networking",
    description: "Test network connectivity",
    syntax: "ping [OPTIONS] HOST",
    options: [
      { flag: "-c", description: "Count of packets to send" },
      { flag: "-i", description: "Interval between packets" },
      { flag: "-s", description: "Packet size" },
      { flag: "-t", description: "TTL value" },
      { flag: "-W", description: "Timeout in seconds" },
    ],
    examples: [
      { command: "ping -c 4 google.com", description: "Ping 4 times" },
      { command: "ping -i 0.5 192.168.1.1", description: "Ping every 0.5 seconds" },
      { command: "ping -s 1500 server.local", description: "Large packet test" },
      { command: "ping -f gateway", description: "Flood ping (careful!)" },
    ],
    relatedCommands: ["ping6", "traceroute", "mtr", "nmap"],
    difficulty: "beginner",
    practiceExercises: [
      "Test connectivity to multiple hosts",
      "Diagnose packet loss issues",
      "Test MTU sizes with large packets",
      "Monitor network latency over time",
      "Create network monitoring scripts",
    ],
  },
  {
    name: "netstat",
    category: "networking",
    description: "Display network connections and statistics",
    syntax: "netstat [OPTIONS]",
    options: [
      { flag: "-t", description: "TCP connections" },
      { flag: "-u", description: "UDP connections" },
      { flag: "-l", description: "Listening ports" },
      { flag: "-n", description: "Numerical addresses" },
      { flag: "-p", description: "Show process using socket" },
    ],
    examples: [
      { command: "netstat -tulnp", description: "All listening ports with process" },
      { command: "netstat -an | grep ESTABLISHED", description: "Active connections" },
      { command: "netstat -s", description: "Network statistics" },
      { command: "netstat -r", description: "Routing table" },
    ],
    relatedCommands: ["ss", "lsof", "nmap", "iftop"],
    difficulty: "intermediate",
    practiceExercises: [
      "Find all listening services",
      "Identify processes using specific ports",
      "Monitor active connections",
      "Detect suspicious network activity",
      "Create port usage reports",
    ],
  },
  {
    name: "ssh",
    category: "networking",
    description: "Secure Shell remote login",
    syntax: "ssh [OPTIONS] [USER@]HOST [COMMAND]",
    options: [
      { flag: "-p", description: "Port number" },
      { flag: "-i", description: "Identity file (private key)" },
      { flag: "-L", description: "Local port forwarding" },
      { flag: "-R", description: "Remote port forwarding" },
      { flag: "-X", description: "X11 forwarding" },
    ],
    examples: [
      { command: "ssh user@server.com", description: "Basic SSH connection" },
      { command: "ssh -p 2222 admin@10.0.0.1", description: "Custom port" },
      { command: "ssh -i ~/.ssh/key.pem ec2-user@aws", description: "Use key file" },
      { command: "ssh -L 8080:localhost:80 server", description: "Port forwarding" },
    ],
    relatedCommands: ["scp", "sftp", "ssh-keygen", "ssh-copy-id"],
    difficulty: "intermediate",
    practiceExercises: [
      "Set up SSH key authentication",
      "Configure SSH tunneling",
      "Create SSH config file for shortcuts",
      "Set up SSH agent forwarding",
      "Implement SSH hardening measures",
    ],
  },
  {
    name: "tar",
    category: "file-operations",
    description: "Archive files (tape archive)",
    syntax: "tar [OPTIONS] [ARCHIVE] [FILES]",
    options: [
      { flag: "-c", description: "Create archive" },
      { flag: "-x", description: "Extract archive" },
      { flag: "-z", description: "Compress with gzip" },
      { flag: "-j", description: "Compress with bzip2" },
      { flag: "-v", description: "Verbose output" },
      { flag: "-f", description: "Archive filename" },
      { flag: "-t", description: "List archive contents" },
    ],
    examples: [
      { command: "tar -czf archive.tar.gz directory/", description: "Create compressed archive" },
      { command: "tar -xzf archive.tar.gz", description: "Extract compressed archive" },
      { command: "tar -tzf archive.tar.gz", description: "List contents" },
      { command: "tar -czf - dir/ | ssh server 'tar -xzf -'", description: "Transfer via SSH" },
    ],
    relatedCommands: ["gzip", "bzip2", "zip", "xz", "7z"],
    difficulty: "intermediate",
    practiceExercises: [
      "Create backups with different compression",
      "Extract specific files from archives",
      "Create incremental backups",
      "Archive with exclusion patterns",
      "Pipeline tar with other commands",
    ],
  },
  {
    name: "cron",
    category: "scripting",
    description: "Schedule jobs (managed via crontab)",
    syntax: "crontab [OPTIONS]",
    options: [
      { flag: "-e", description: "Edit crontab" },
      { flag: "-l", description: "List crontab" },
      { flag: "-r", description: "Remove crontab" },
      { flag: "-u", description: "Specify user" },
    ],
    examples: [
      { command: "crontab -e", description: "Edit current user's crontab" },
      { command: "0 2 * * * /backup.sh", description: "Daily at 2 AM" },
      { command: "*/5 * * * * /monitor.sh", description: "Every 5 minutes" },
      { command: "0 0 * * 0 /weekly.sh", description: "Weekly on Sunday" },
    ],
    relatedCommands: ["at", "anacron", "systemd-timer", "watch"],
    difficulty: "intermediate",
    practiceExercises: [
      "Schedule daily backups",
      "Set up log rotation jobs",
      "Create system monitoring crons",
      "Implement cleanup scripts",
      "Debug cron job failures",
    ],
  },
  {
    name: "df",
    category: "file-operations",
    description: "Display disk space usage",
    syntax: "df [OPTIONS] [FILE]",
    options: [
      { flag: "-h", description: "Human-readable sizes" },
      { flag: "-i", description: "Show inode information" },
      { flag: "-T", description: "Show filesystem type" },
      { flag: "-x", description: "Exclude filesystem type" },
    ],
    examples: [
      { command: "df -h", description: "Show disk usage in human format" },
      { command: "df -hT", description: "Include filesystem types" },
      { command: "df -i", description: "Check inode usage" },
      { command: "df /home", description: "Check specific mount point" },
    ],
    relatedCommands: ["du", "lsblk", "mount", "fdisk"],
    difficulty: "beginner",
    practiceExercises: [
      "Monitor disk space usage",
      "Create disk space alerts",
      "Identify filesystem types",
      "Check inode exhaustion",
      "Script automated space reports",
    ],
  },
  {
    name: "du",
    category: "file-operations",
    description: "Display directory disk usage",
    syntax: "du [OPTIONS] [DIRECTORY]",
    options: [
      { flag: "-h", description: "Human-readable sizes" },
      { flag: "-s", description: "Summary only" },
      { flag: "-c", description: "Grand total" },
      { flag: "--max-depth", description: "Limit directory depth" },
    ],
    examples: [
      { command: "du -sh *", description: "Size of each item in current directory" },
      { command: "du -h --max-depth=1", description: "One level deep" },
      { command: "du -sh /var/*", description: "Size of /var subdirectories" },
      { command: "du -c *.log", description: "Total size of log files" },
    ],
    relatedCommands: ["df", "ls", "find", "ncdu"],
    difficulty: "beginner",
    practiceExercises: [
      "Find largest directories",
      "Identify space hogs",
      "Compare directory sizes",
      "Track growth over time",
      "Clean up large files",
    ],
  },
];

// Practice projects for comprehensive learning
export const practiceProjects = [
  {
    title: "System Information Dashboard",
    difficulty: "beginner",
    description: "Create a script that displays system information",
    tasks: [
      "Show hostname, kernel version, and uptime",
      "Display CPU and memory usage",
      "List disk usage for all partitions",
      "Show network interfaces and IPs",
      "Display logged-in users",
    ],
    commands: ["uname", "hostname", "uptime", "free", "df", "ip", "who"],
  },
  {
    title: "Automated Backup System",
    difficulty: "intermediate",
    description: "Build a backup system with rotation",
    tasks: [
      "Create compressed archives of important directories",
      "Implement date-based naming",
      "Set up rotation to keep only last 7 backups",
      "Add logging and error handling",
      "Schedule with cron",
    ],
    commands: ["tar", "find", "date", "cron", "rm", "gzip"],
  },
  {
    title: "User Management Script",
    difficulty: "intermediate",
    description: "Automate user account management",
    tasks: [
      "Bulk create users from a CSV file",
      "Set initial passwords",
      "Assign users to groups",
      "Create home directories with templates",
      "Generate user reports",
    ],
    commands: ["useradd", "passwd", "groupadd", "chown", "chmod"],
  },
  {
    title: "Log Analysis Tool",
    difficulty: "advanced",
    description: "Create a comprehensive log analyzer",
    tasks: [
      "Parse multiple log formats",
      "Extract error patterns",
      "Generate statistics and reports",
      "Alert on critical issues",
      "Archive processed logs",
    ],
    commands: ["grep", "awk", "sed", "sort", "uniq"],
  },
  {
    title: "Security Audit Script",
    difficulty: "advanced",
    description: "Perform security checks on the system",
    tasks: [
      "Check for weak permissions",
      "Find SUID/SGID files",
      "Audit user accounts and passwords",
      "Check open ports and services",
      "Generate security report",
    ],
    commands: ["find", "netstat", "ps", "chmod", "systemctl"],
  },
  {
    title: "Network Monitoring Tool",
    difficulty: "advanced",
    description: "Build a network monitoring solution",
    tasks: [
      "Monitor connectivity to critical hosts",
      "Track bandwidth usage",
      "Log network issues",
      "Send alerts on failures",
      "Generate uptime reports",
    ],
    commands: ["ping", "netstat", "ss", "ip", "traceroute"],
  },
  {
    title: "Deployment Pipeline",
    difficulty: "advanced",
    description: "Create a simple CI/CD pipeline",
    tasks: [
      "Pull code from repository",
      "Run tests",
      "Build application",
      "Deploy to server",
      "Rollback on failure",
    ],
    commands: ["git", "ssh", "scp", "systemctl", "tar"],
  },
  {
    title: "Resource Monitor",
    difficulty: "intermediate",
    description: "Track system resource usage",
    tasks: [
      "Monitor CPU usage per process",
      "Track memory consumption",
      "Watch disk I/O",
      "Log high resource usage",
      "Create usage reports",
    ],
    commands: ["top", "ps", "free", "iostat", "vmstat"],
  },
  {
    title: "File Organization System",
    difficulty: "beginner",
    description: "Organize files by type and date",
    tasks: [
      "Sort files by extension",
      "Organize by creation date",
      "Remove duplicate files",
      "Archive old files",
      "Create index of files",
    ],
    commands: ["find", "mv", "mkdir", "date", "md5sum"],
  },
  {
    title: "Service Health Checker",
    difficulty: "intermediate",
    description: "Monitor critical services",
    tasks: [
      "Check service status",
      "Restart failed services",
      "Log service events",
      "Send notifications",
      "Generate availability reports",
    ],
    commands: ["systemctl", "journalctl", "grep", "mail"],
  },
];